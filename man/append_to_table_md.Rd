% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/motherduck.R
\name{append_to_table_md}
\alias{append_to_table_md}
\title{Append Data to a Table in a Database}
\usage{
append_to_table_md(conn, database_name, table_name, data)
}
\arguments{
\item{conn}{A DBI connection object to the database where the table is located.}

\item{database_name}{A string representing the name of the database.}

\item{table_name}{A string representing the name of the table to which data will be appended.}

\item{data}{A data frame containing the data to be appended to the specified table.}
}
\value{
Returns a logical value indicating whether all rows were appended successfully.
It returns \code{TRUE} if all rows were inserted, and \code{FALSE} otherwise.
}
\description{
This function appends data from a given data frame to a specified table in a database.
It checks if the database connection is valid, ensures that necessary parameters are provided,
constructs an SQL \code{INSERT} statement, and executes the insertion for each row of data.
The function provides feedback on the success of the operation, including how many rows
were successfully inserted.
}
\details{
\itemize{
\item The function validates the database connection and checks for the presence of required parameters.
\item It constructs an SQL \code{INSERT} statement with placeholders for the row values.
\item The insertion is performed row by row, and the function counts the number of successful inserts.
\item If any errors occur during the insertion process, an error message is displayed,
and the function returns \code{FALSE}.
\item At the end of the operation, the function checks if all rows were inserted and provides
an appropriate message indicating the number of rows appended.
}
}
\examples{
\dontrun{
  # Assuming 'conn' is a valid DBI connection, 'data_to_append' is a data frame
  append_to_table_md(conn, "my_database", "my_table", data_to_append)
}

}
