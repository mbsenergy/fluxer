% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gme_download.R
\name{gme_mi_price_xml_to_data}
\alias{gme_mi_price_xml_to_data}
\title{Download and Parse GME MI Market XML File}
\usage{
gme_mi_price_xml_to_data(xml_file_path)
}
\arguments{
\item{filename}{Character. Filename of the XML to download (must be 8-digit date + \code{.xml}, e.g. \code{"20240710.xml"}).}

\item{data_type}{Character. Type of data to download. One of: \code{"MI-A1_Prezzi"}, \code{"MI-A2_Prezzi"}, \code{"MI-A3_Prezzi"},
\code{"MI-A1_Quantita"}, \code{"MI-A2_Quantita"}, \code{"MI-A3_Quantita"}.}

\item{output_dir}{Character. Local directory to store the downloaded XML file temporarily.}

\item{username}{Character. Username for GME FTP access.}

\item{password}{Character. Password for GME FTP access.}

\item{raw}{Logical. If \code{TRUE}, returns only \code{TRUE} if the file is downloaded successfully, without parsing it. Default is \code{FALSE}.}
}
\value{
If \code{raw = FALSE}, a \code{data.table} containing parsed data from the XML file, in long format, with standard columns:
\describe{
\item{DATE}{Date of the transaction}
\item{TIME}{Hour formatted as \code{"HH:00"}}
\item{HOUR}{Integer hour (1–24)}
\item{MARKET}{Market session (e.g. \code{"MI-A1"})}
\item{ZONE}{Zone or interconnection code (e.g. \code{"CNOR_ACQUISTI"})}
\item{VALUE}{Numeric value (MWh or EUR/MWh)}
\item{UNIT}{Measurement unit (\code{"MWh"} or \code{"€/MWh"})}
\item{VARIABLE}{Only in MI-A3 Quantita, type of quantity (e.g. \code{"MODULAZIONE"})}
}

If \code{raw = TRUE}, returns \code{TRUE} if the download was successful. If there is an error, returns \code{NULL}.
}
\description{
Downloads an XML file from the GME (Gestore dei Mercati Energetici) FTP server for the MI-A market,
validates the filename and data type, and optionally parses the file into a \code{data.table}.
}
\details{
The function checks that the \code{filename} is valid and that the \code{data_type} is among the allowed options.
It then builds the FTP URL for the requested XML file and downloads it using \code{curl}.
If \code{raw = FALSE}, the function parses the downloaded file using the appropriate parser:
\itemize{
\item \code{gme_mi_price_xml_to_data()} for \code{"MI-A*_Prezzi"} types
\item \code{gme_mi_qty_xml_to_data()} for \code{"MI-A*_Quantita"} types
}
The parsed file is reshaped to a standard long format. If \code{raw = FALSE}, the downloaded file is deleted after parsing.
}
\examples{
\dontrun{
df = mi_download_file("20240710.xml", data_type = "MI-A1_Quantita",
                      output_dir = tempdir(), username = "user", password = "pass")
head(df)
}

}
