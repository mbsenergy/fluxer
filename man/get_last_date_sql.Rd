% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/motherduck.R
\name{get_last_date_sql}
\alias{get_last_date_sql}
\title{Retrieve the Last Date from a Table in a Database}
\usage{
get_last_date_sql(con, database_name, table_name, verbose = FALSE)
}
\arguments{
\item{con}{A DBI connection object to the database from which to retrieve data.}

\item{database_name}{A string representing the name of the database.}

\item{table_name}{A string representing the name of the table from which to retrieve the date.}

\item{verbose}{A logical value indicating whether to print the result of the query.
Defaults to \code{FALSE}.}
}
\value{
A data frame containing the most recent row of data from the specified table,
or \code{NULL} if the query fails.
}
\description{
This function retrieves the most recent date from a specified table in a database.
It executes a SQL query that orders the data by the date column in descending order
and limits the results to one record. This is useful for determining the latest
entry in time series data or for managing data updates.
}
\details{
\itemize{
\item The function constructs a SQL \code{SELECT} statement to fetch all columns from the specified
table, ordering the results by the \code{DATE} column in descending order.
\item If the query is successful, the result is printed if \code{verbose} is set to \code{TRUE},
and the result is returned as a data frame.
\item If an error occurs during the execution of the query, an error message is displayed,
and the function returns \code{NULL}.
}
}
\examples{
\dontrun{
  # Assuming 'con' is a valid DBI connection
  last_date <- get_last_date_sql(con, "my_database", "my_table", verbose = TRUE)
  print(last_date)
}

}
